# -*- coding: utf-8 -*-
"""app.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hnAfOcMxjMcI40FyQ0_eIeL1TvYsq3yS
"""
import streamlit as st
import joblib
import numpy as np
import xgboost as xgb
from sklearn.preprocessing import StandardScaler, PolynomialFeatures

# Load the trained model
model = joblib.load("xgboost_model_optimized2.pkl")
scaler = joblib.load("scaler.pkl")  # Ensure you save and load the scaler used during training
poly = joblib.load("poly.pkl")  # Load polynomial feature transformer

# Function to make predictions
def predict_malnutrition(sex, age, height, weight):
    if age < 1 or age > 5:
        return "Error: Age must be between 1 and 5 years."

    bmi = weight / ((height / 100) ** 2)
    user_data = np.array([[sex, age, height, weight, bmi]])
    user_data_poly = poly.transform(user_data)  # Apply polynomial transformation
    user_data_scaled = scaler.transform(user_data_poly)  # Standardize

    prediction = model.predict(user_data_scaled)
    classes = ['Stunting', 'Overweight', 'Underweight']
    return classes[prediction[0]]

# Streamlit App UI
st.set_page_config(page_title="Malnutrition Prediction", page_icon="üçé", layout="centered")

st.title("üçé Malnutrition Prediction System")
st.write("### Enter child's details to predict malnutrition status")

# User Inputs
sex = st.radio("Select Gender:", ["Male", "Female"])
sex = 1 if sex == "Male" else 0
age = st.number_input("Age (1-5 years)", min_value=1, max_value=5, step=1)
height = st.number_input("Height (cm)", min_value=50, max_value=120, step=1)
weight = st.number_input("Weight (kg)", min_value=5, max_value=30, step=1)

if st.button("Predict Malnutrition Status"):
    result = predict_malnutrition(sex, age, height, weight)
    if "Error" in result:
        st.error(result)
    else:
        st.success(f"Predicted Malnutrition Status: {result}")

# Footer
st.markdown("---")
st.markdown("üë®‚Äç‚öïÔ∏è **Developed for academic research in child malnutrition prediction using AI.**")